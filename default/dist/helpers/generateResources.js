"use strict";import{gridCells as h}from"../helpers/grid.js";function v(n){return function(){let e=n+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}}function g(n,e,o){return o?o.some(r=>n>=r.x1&&n<=r.x2&&e>=r.y1&&e<=r.y2):!1}export function generateDefaultResources(n){const{seed:e=42,width:o,height:r,tileSize:t=16,density:i={Tree:.015,Bush:.007,Stone:.002},pathZones:y=[],border:l=32}=n,a=v(e+n.levelId.length),x=Math.floor(o/t),S=Math.floor(r/t),c=[];for(let u=0;u<S;u++)for(let s=0;s<x;s++){const p=s*t,d=u*t;if(g(s,u,y)||p<l||p>o-l-t||d<l||d>r-l-t)continue;const f=a();if(f<i.Tree){const m=b(a,3,4,.1);c.push({type:"Tree",x:h(s),y:h(u),hp:m})}else if(f<i.Tree+i.Bush){const m=b(a,2,2,.1);c.push({type:"Bush",x:h(s),y:h(u),hp:m})}else if(f<i.Tree+i.Bush+i.Stone){const m=b(a,3,4,.1);c.push({type:"Stone",x:h(s),y:h(u),hp:m})}}return c}function b(n,e,o,r=.1){let t=Math.floor(n()*(o-e+1))+e;return n()<r&&(n()<.5?t=Math.max(1,t-1):t=t+1),t}
