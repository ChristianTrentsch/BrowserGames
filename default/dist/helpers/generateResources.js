"use strict";import{gridCells as i}from"../helpers/grid.js";function v(t){return function(){let e=t+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}}function S(t,e,r){return r?r.some(o=>t>=o.x1&&t<=o.x2&&e>=o.y1&&e<=o.y2):!1}export function generateDefaultResources(t){const{seed:e=42,width:r,height:o,tileSize:n=16,density:a={Tree:.015,Bush:.007,Stone:.002},pathZones:y=[],border:h=32}=t,b=v(e+t.levelId.length),x=Math.floor(r/n),k=Math.floor(o/n),m=[];for(let s=0;s<k;s++)for(let u=0;u<x;u++){const p=u*n,d=s*n;if(S(u,s,y)||p<h||p>r-h-n||d<h||d>o-h-n)continue;const l=b();if(l<a.Tree){const c=f(b,3,4,.1);m.push({type:"tree",x:i(u),y:i(s),hp:c})}else if(l<a.Tree+a.Bush){const c=f(b,2,2,.1);m.push({type:"bush",x:i(u),y:i(s),hp:c})}else if(l<a.Tree+a.Bush+a.Stone){const c=f(b,3,4,.1);m.push({type:"stone",x:i(u),y:i(s),hp:c})}}return m}function f(t,e,r,o=.1){let n=Math.floor(t()*(r-e+1))+e;return t()<o&&(t()<.5?n=Math.max(1,n-1):n=n+1),n}export function getResourceFrame(t,e="outdoor"){let r=0;switch(t){case"bush":switch(e){case"desert":r=2;break;default:r=0;break}break;case"tree":case"stone":switch(e){case"desert":r=4;break;default:r=0;break}break;case"square":switch(e){case"desert":r=1;break;default:r=0;break}break}return r}
