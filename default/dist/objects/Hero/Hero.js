"use strict";import{moveTowards as T}from"../../helpers/moveTowards.js";import{TILE_SIZE as l,isSpaceFree as S}from"../../helpers/grid.js";import{STAND_DOWN as U,STAND_LEFT as E,STAND_RIGHT as g,STAND_UP as D,WALK_DOWN as A,WALK_LEFT as I,WALK_RIGHT as O,WALK_UP as _,PICK_UP_DOWN as N}from"./heroAnimations.js";import{events as m,HERO_POSTION as R,HERO_PICKS_UP_ITEM as L,HERO_REQUESTS_ACTION as v,TEXTBOX_START as C,TEXTBOX_END as H,HERO_ATTACK_ACTION as x,HERO_CHANGE_EQUIPMENT as F}from"../../Events.js";import{GameObject as u}from"../../GameObject.js";import{Vector2 as c}from"../../Vector2.js";import{DOWN as d,LEFT as b,RIGHT as y,UP as k}from"../../Input.js";import{Sprite as w}from"../../Sprite.js";import{resources as f}from"../../Resource.js";import{Animations as K}from"../../Animations.js";import{FrameIndexPattern as o}from"../../FrameIndexPattern.js";import{SaveGame as P}from"../../SaveGame.js";import{INVENTORY_BUSH as W,INVENTORY_STONE as X,INVENTORY_TREE as G}from"../Inventory/Inventory.js";import{Attack as M}from"../Animations/Attack.js";import{Tree as Y}from"../../levels/parts/Tree/Tree.js";import{Stone as B}from"../../levels/parts/Stone/Stone.js";import{Bush as V}from"../../levels/parts/Bush/Bush.js";export class Hero extends u{constructor(i,n){super(new c(i,n));const e=new w({resource:f.images.shadow,position:new c(-8,-18),frameSize:new c(32,32)});this.addChild(e),this.body=new w({resource:f.images.hero,position:new c(-8,-19),frameSize:new c(32,32),hFrames:3,vFrames:12,frame:1,animations:new K({walkLeft:new o(I),walkDown:new o(A),walkUp:new o(_),walkRight:new o(O),standLeft:new o(E),standDown:new o(U),standUp:new o(D),standRight:new o(g),pickUpDown:new o(N)})}),this.addChild(this.body),this.facingDirection=d,this.destinationPosition=this.position.duplicate(),this.itemPickUpTime=0,this.itemPickUpShell=null,this.isLocked=!1}ready(){m.on(L,this,i=>{this.onPickUpItem(i)}),m.on(C,this,()=>{this.isLocked=!0}),m.on(H,this,()=>{this.isLocked=!1})}step(i,n){if(this.isLocked){if(this.body.animations)switch(this.facingDirection){case b:this.body.animations.play("standLeft");break;case y:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case d:this.body.animations.play("standDown");break}return}if(this.itemPickUpTime>0){this.workOnItemPickUp(i);return}const e=n.input;if(e.getActionJustPressed("Space")&&this.parent){const t=this.parent.children.find(r=>r.position.matches(this.position.toNeighbor(this.facingDirection)));t&&!(t instanceof Hero)&&m.emit(v,t)}if(e.getActionJustPressed("KeyF")){const t=P.loadEquipment(),r=t.findIndex(s=>s.active===!0);if(t[r]&&t[r].name&&this.addChild(new M(this.facingDirection,t[r].name)),this.parent){const s=this.parent.children.find(p=>p.position.matches(this.position.toNeighbor(this.facingDirection)));s&&(s instanceof Y||s instanceof B||s instanceof V)&&m.emit(x,s)}}e.getActionJustPressed("KeyQ")&&m.emit(F,this),T(this,this.destinationPosition,1)<=0&&this.tryMove(n),this.tryEmitPosition()}tryEmitPosition(){this.lastX===this.position.x&&this.lastY===this.position.y||(this.lastX=this.position.x,this.lastY=this.position.y,this.body.position&&m.emit(R,this.position))}tryMove(i){const n=i.input;if(!n.direction&&this.body.animations){switch(this.facingDirection){case b:this.body.animations.play("standLeft");break;case y:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case d:this.body.animations.play("standDown");break}return}let e=this.destinationPosition.x,a=this.destinationPosition.y;if(this.body.animations)switch(n.direction){case b:e-=l,this.body.animations.play("walkLeft");break;case y:e+=l,this.body.animations.play("walkRight");break;case k:a-=l,this.body.animations.play("walkUp");break;case d:a+=l,this.body.animations.play("walkDown");break}this.facingDirection=n.direction??this.facingDirection;const h=i.level;if(h){const t=h.walls;if(!t||!this.parent)return;if(t){const r=S(t,e,a),s=this.parent.children.find(p=>p.isSolid&&p.position.x===e&&p.position.y===a);r&&!s&&(this.destinationPosition.x=e,this.destinationPosition.y=a,P.saveHero(h.levelId,this.destinationPosition))}}}onPickUpItem(i){const n=i.position;if(n){this.destinationPosition=n.duplicate(),this.itemPickUpTime=1e3,(i.name===W||i.name===G||i.name===X)&&(this.itemPickUpTime=200),P.loadSound()==="on"&&i.itemSound.play().catch(t=>console.warn("Sound konnte nicht abgespielt werden:",t));const a=f.getCollectibleItemFrame(i.name);i.image&&(this.itemPickUpShell=new u(new c(0,0)),this.itemPickUpShell.addChild(new w({resource:f.images.collectible,position:new c(0,-19),hFrames:20,frame:a})),this.addChild(this.itemPickUpShell))}}workOnItemPickUp(i){this.itemPickUpTime-=i,this.body.animations&&this.body.animations.play("pickUpDown"),this.itemPickUpShell&&this.itemPickUpTime<=0&&(this.itemPickUpShell.destroy(),this.itemPickUpShell=null)}}
