"use strict";import{moveTowards as u}from"../../helpers/moveTowards.js";import{TILE_SIZE as U,isSpaceFree as T}from"../../helpers/grid.js";import{STAND_DOWN as S,STAND_LEFT as D,STAND_RIGHT as I,STAND_UP as E,WALK_DOWN as _,WALK_LEFT as g,WALK_RIGHT as L,WALK_UP as O,PICK_UP_DOWN as A}from"./heroAnimations.js";import{events as m,HERO_POSTION as R,HERO_PICKS_UP_ITEM as v,HERO_REQUESTS_ACTION as N,TEXTBOX_START as x,TEXTBOX_END as F}from"../../Events.js";import{GameObject as l}from"../../GameObject.js";import{Vector2 as n}from"../../Vector2.js";import{DOWN as p,LEFT as f,RIGHT as w,UP as k}from"../../Input.js";import{Sprite as d}from"../../Sprite.js";import{resources as P}from"../../Resource.js";import{Animations as W}from"../../Animations.js";import{FrameIndexPattern as s}from"../../FrameIndexPattern.js";export class Hero extends l{constructor(i,t){super(new n(i,t));const e=new d({resource:P.images.shadow,position:new n(-8,-18),frameSize:new n(32,32)});this.addChild(e),this.body=new d({resource:P.images.hero,position:new n(-8,-19),frameSize:new n(32,32),hFrames:3,vFrames:8,frame:1,animations:new W({walkLeft:new s(g),walkDown:new s(_),walkUp:new s(O),walkRight:new s(L),standLeft:new s(D),standDown:new s(S),standUp:new s(E),standRight:new s(I),pickUpDown:new s(A)})}),this.addChild(this.body),this.facingDirection=p,this.destinationPosition=this.position.duplicate(),this.itemPickUpTime=0,this.itemPickUpShell=null,this.isLocked=!1}ready(){m.on(v,this,i=>{this.onPickUpItem(i)}),m.on(x,this,()=>{this.isLocked=!0}),m.on(F,this,()=>{this.isLocked=!1})}step(i,t){if(this.isLocked)return;if(this.itemPickUpTime>0){this.workOnItemPickUp(i);return}if(t.input.getActionJustPressed("Space")&&this.parent){const r=this.parent.children.find(h=>h.position.matches(this.position.toNeighbor(this.facingDirection)));r&&m.emit(N,r)}u(this,this.destinationPosition,1)<=0&&this.tryMove(t),this.tryEmitPosition()}tryEmitPosition(){this.lastX===this.position.x&&this.lastY===this.position.y||(this.lastX=this.position.x,this.lastY=this.position.y,this.body.position&&m.emit(R,this.position))}tryMove(i){const t=i.input;if(!t.direction&&this.body.animations){switch(this.facingDirection){case f:this.body.animations.play("standLeft");break;case w:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case p:this.body.animations.play("standDown");break}return}let e=this.destinationPosition.x,o=this.destinationPosition.y;const a=U;if(this.body.animations)switch(t.direction){case f:e-=a,this.body.animations.play("walkLeft");break;case w:e+=a,this.body.animations.play("walkRight");break;case k:o-=a,this.body.animations.play("walkUp");break;case p:o+=a,this.body.animations.play("walkDown");break}this.facingDirection=t.direction??this.facingDirection;const r=i.level;if(r){const h=r.walls;if(!h||!this.parent)return;if(h){const y=T(h,e,o),b=this.parent.children.find(c=>c.isSolid&&c.position.x===e&&c.position.y===o);y&&!b&&(this.destinationPosition.x=e,this.destinationPosition.y=o)}}}onPickUpItem(i){const t=i.position;if(t){this.destinationPosition=t.duplicate(),this.itemPickUpTime=1e3;const e=i.image;e&&(this.itemPickUpShell=new l(new n(0,0)),this.itemPickUpShell.addChild(new d({resource:e,position:new n(0,-19)})),this.addChild(this.itemPickUpShell))}}workOnItemPickUp(i){this.itemPickUpTime-=i,this.body.animations&&this.body.animations.play("pickUpDown"),this.itemPickUpShell&&this.itemPickUpTime<=0&&(this.itemPickUpShell.destroy(),this.itemPickUpShell=null)}}
