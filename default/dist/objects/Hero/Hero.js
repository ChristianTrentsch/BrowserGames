"use strict";import{moveTowards as S}from"../../helpers/moveTowards.js";import{TILE_SIZE as U,isSpaceFree as T}from"../../helpers/grid.js";import{STAND_DOWN as D,STAND_LEFT as I,STAND_RIGHT as g,STAND_UP as E,WALK_DOWN as _,WALK_LEFT as O,WALK_RIGHT as L,WALK_UP as A,PICK_UP_DOWN as v}from"./heroAnimations.js";import{events as m,HERO_POSTION as N,HERO_PICKS_UP_ITEM as R,HERO_REQUESTS_ACTION as x,TEXTBOX_START as C,TEXTBOX_END as F}from"../../Events.js";import{GameObject as l}from"../../GameObject.js";import{Vector2 as a}from"../../Vector2.js";import{DOWN as p,LEFT as f,RIGHT as w,UP as k}from"../../Input.js";import{Sprite as d}from"../../Sprite.js";import{resources as P}from"../../Resource.js";import{Animations as H}from"../../Animations.js";import{FrameIndexPattern as s}from"../../FrameIndexPattern.js";import{SaveGame as u}from"../../SaveGame.js";export class Hero extends l{constructor(i,t){super(new a(i,t));const e=new d({resource:P.images.shadow,position:new a(-8,-18),frameSize:new a(32,32)});this.addChild(e),this.body=new d({resource:P.images.hero,position:new a(-8,-19),frameSize:new a(32,32),hFrames:3,vFrames:8,frame:1,animations:new H({walkLeft:new s(O),walkDown:new s(_),walkUp:new s(A),walkRight:new s(L),standLeft:new s(I),standDown:new s(D),standUp:new s(E),standRight:new s(g),pickUpDown:new s(v)})}),this.addChild(this.body),this.facingDirection=p,this.destinationPosition=this.position.duplicate(),this.itemPickUpTime=0,this.itemPickUpShell=null,this.isLocked=!1}ready(){m.on(R,this,i=>{this.onPickUpItem(i)}),m.on(C,this,()=>{this.isLocked=!0}),m.on(F,this,()=>{this.isLocked=!1})}step(i,t){if(this.isLocked)return;if(this.itemPickUpTime>0){this.workOnItemPickUp(i);return}if(t.input.getActionJustPressed("Space")&&this.parent){const r=this.parent.children.find(h=>h.position.matches(this.position.toNeighbor(this.facingDirection)));r&&m.emit(x,r)}S(this,this.destinationPosition,1)<=0&&this.tryMove(t),this.tryEmitPosition()}tryEmitPosition(){this.lastX===this.position.x&&this.lastY===this.position.y||(this.lastX=this.position.x,this.lastY=this.position.y,this.body.position&&m.emit(N,this.position))}tryMove(i){const t=i.input;if(!t.direction&&this.body.animations){switch(this.facingDirection){case f:this.body.animations.play("standLeft");break;case w:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case p:this.body.animations.play("standDown");break}return}let e=this.destinationPosition.x,n=this.destinationPosition.y;const o=U;if(this.body.animations)switch(t.direction){case f:e-=o,this.body.animations.play("walkLeft");break;case w:e+=o,this.body.animations.play("walkRight");break;case k:n-=o,this.body.animations.play("walkUp");break;case p:n+=o,this.body.animations.play("walkDown");break}this.facingDirection=t.direction??this.facingDirection;const r=i.level;if(r){const h=r.walls;if(!h||!this.parent)return;if(h){const y=T(h,e,n),b=this.parent.children.find(c=>c.isSolid&&c.position.x===e&&c.position.y===n);y&&!b&&(this.destinationPosition.x=e,this.destinationPosition.y=n,u.saveHero(r.levelId,this.destinationPosition))}}}onPickUpItem(i){const t=i.position;if(t){this.destinationPosition=t.duplicate(),this.itemPickUpTime=1e3,u.loadSound()==="true"&&i.itemSound.play().catch(o=>console.warn("Sound konnte nicht abgespielt werden:",o));const n=i.image;n&&(this.itemPickUpShell=new l(new a(0,0)),this.itemPickUpShell.addChild(new d({resource:n,position:new a(0,-19)})),this.addChild(this.itemPickUpShell))}}workOnItemPickUp(i){this.itemPickUpTime-=i,this.body.animations&&this.body.animations.play("pickUpDown"),this.itemPickUpShell&&this.itemPickUpTime<=0&&(this.itemPickUpShell.destroy(),this.itemPickUpShell=null)}}
