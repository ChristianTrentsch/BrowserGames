"use strict";import{moveTowards as S}from"../../helpers/moveTowards.js";import{TILE_SIZE as l,isSpaceFree as E}from"../../helpers/grid.js";import{STAND_DOWN as T,STAND_LEFT as U,STAND_RIGHT as A,STAND_UP as g,WALK_DOWN as D,WALK_LEFT as x,WALK_RIGHT as _,WALK_UP as v,PICK_UP_DOWN as O}from"./heroAnimations.js";import{events as s,HERO_POSTION as H,HERO_PICKS_UP_ITEM as I,HERO_REQUESTS_ACTION as L,TEXTBOX_START as R,TEXTBOX_END as N,HERO_ATTACK_ACTION as C,HERO_CHANGE_EQUIPMENT as K,RES_DESTROY as F,HERO_CHANGE_EXP as G,HERO_SHOW_MAP as M}from"../../Events.js";import{GameObject as P}from"../../GameObject.js";import{Vector2 as c}from"../../Vector2.js";import{DOWN as d,LEFT as b,RIGHT as y,UP as k}from"../../Input.js";import{Sprite as u}from"../../Sprite.js";import{resources as w}from"../../Resource.js";import{Animations as W}from"../../Animations.js";import{FrameIndexPattern as h}from"../../FrameIndexPattern.js";import{SaveGame as f}from"../../SaveGame.js";import{Attack as X}from"../Animations/Attack.js";import{Tree as B}from"../../levels/parts/Tree/Tree.js";import{Stone as Y}from"../../levels/parts/Stone/Stone.js";import{Bush as j}from"../../levels/parts/Bush/Bush.js";import{BUSH as J,Item as Q,STONE as V,TREE as q}from"../Item/Item.js";export const LEVEL_THRESHOLDS=[10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750,760,770,780,790,800,810,820,830,840,850,860,870,880,890,900,910,920,930,940,950,960,970,980,990,1e3];export class Hero extends P{constructor(i,t,e,o){super(new c(i,t));const a=new u({resource:w.images.shadow,position:new c(-8,-18),frameSize:new c(32,32)});this.addChild(a),this.body=new u({resource:w.images.hero,position:new c(-8,-19),frameSize:new c(32,32),hFrames:3,vFrames:12,frame:1,animations:new W({walkLeft:new h(x),walkDown:new h(D),walkUp:new h(v),walkRight:new h(_),standLeft:new h(U),standDown:new h(T),standUp:new h(g),standRight:new h(A),pickUpDown:new h(O)})}),this.addChild(this.body),this.facingDirection=d,this.destinationPosition=this.position.duplicate(),this.itemPickUpTime=0,this.itemPickUpShell=null,this.isLocked=!1,this.exp=e,this.level=o}ready(){s.on(I,this,i=>{this.onPickUpItem(i)}),s.on(F,this,i=>{this.onHeroGainExp(i)}),s.on(R,this,()=>{this.isLocked=!0}),s.on(N,this,()=>{this.isLocked=!1})}step(i,t){if(this.isLocked){if(this.body.animations)switch(this.facingDirection){case b:this.body.animations.play("standLeft");break;case y:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case d:this.body.animations.play("standDown");break}return}if(this.itemPickUpTime>0){this.workOnItemPickUp(i);return}const e=t.input;if(e.getActionJustPressed("Space")&&this.parent){const n=this.parent.children.find(m=>m.position.matches(this.position.toNeighbor(this.facingDirection)));n&&!(n instanceof Hero)&&s.emit(L,n)}if(e.getActionJustPressed("KeyF")){const n=f.loadEquipment(),m=n.findIndex(r=>r.active===!0);if(n[m]&&n[m].name&&this.addChild(new X(this.facingDirection,n[m].name)),this.parent){const r=this.parent.children.find(p=>p.position.matches(this.position.toNeighbor(this.facingDirection)));r&&(r instanceof B||r instanceof Y||r instanceof j)&&s.emit(C,r)}}e.getActionJustPressed("KeyQ")&&s.emit(K,this),e.getActionJustPressed("KeyM")&&s.emit(M,this),S(this,this.destinationPosition,1)<=0&&this.tryMove(t),this.tryEmitPosition()}tryEmitPosition(){this.lastX===this.position.x&&this.lastY===this.position.y||(this.lastX=this.position.x,this.lastY=this.position.y,this.body.position&&s.emit(H,this.position))}tryMove(i){const t=i.input;if(!t.direction&&this.body.animations){switch(this.facingDirection){case b:this.body.animations.play("standLeft");break;case y:this.body.animations.play("standRight");break;case k:this.body.animations.play("standUp");break;case d:this.body.animations.play("standDown");break}return}let e=this.destinationPosition.x,o=this.destinationPosition.y;if(this.body.animations)switch(t.direction){case b:e-=l,this.body.animations.play("walkLeft");break;case y:e+=l,this.body.animations.play("walkRight");break;case k:o-=l,this.body.animations.play("walkUp");break;case d:o+=l,this.body.animations.play("walkDown");break}this.facingDirection=t.direction??this.facingDirection;const a=i.level;if(a){const n=a.walls;if(!n||!this.parent)return;if(n){const m=E(n,e,o),r=this.parent.children.find(p=>p.isSolid&&p.position.x===e&&p.position.y===o);m&&!r&&(this.destinationPosition.x=e,this.destinationPosition.y=o,f.saveHero(this.level,this.destinationPosition,this.exp))}}}onHeroGainExp(i){this.exp+=i.xp;const t=LEVEL_THRESHOLDS[this.level];if(t&&this.exp>=t&&this.level<LEVEL_THRESHOLDS.length-1){this.level++;const e=this.exp-t;this.exp=e}f.saveHero(this.level,this.position,this.exp),s.emit(G,{exp:this.exp,level:this.level})}onPickUpItem(i){const t=i.position;if(t&&(this.destinationPosition=t.duplicate(),this.itemPickUpTime=1e3,(i.name===J||i.name===q||i.name===V)&&(this.itemPickUpTime=200),f.loadSound()==="on"&&i.itemSound.play().catch(a=>console.warn("Sound konnte nicht abgespielt werden:",a)),i.image)){const a=Q.getCollectibleItemFrame(i.name);this.itemPickUpShell=new P(new c(0,0)),this.itemPickUpShell.addChild(new u({resource:w.images.collectible,position:new c(0,-19),hFrames:20,frame:a})),this.addChild(this.itemPickUpShell)}}workOnItemPickUp(i){this.itemPickUpTime-=i,this.body.animations&&this.body.animations.play("pickUpDown"),this.itemPickUpShell&&this.itemPickUpTime<=0&&(this.itemPickUpShell.destroy(),this.itemPickUpShell=null)}}
