"use strict";import{CHANGE_LEVEL as p,events as l,HERO_SHOW_MAP as m}from"../../Events.js";import{GameObject as a}from"../../GameObject.js";import{resources as s}from"../../Resource.js";import{SaveGame as n}from"../../SaveGame.js";import{Sprite as h}from"../../Sprite.js";import{Vector2 as t}from"../../Vector2.js";import{Hero as d}from"../Hero/Hero.js";export class LevelMap extends a{constructor(){super(new t(-52,0));this.isVisible=!1;this.mapScale=.14;this.mapShell=null;this.levelId=n.loadLevel()}ready(){l.on(p,this,e=>{this.isVisible=!1,this.levelId=e.levelId,this.hideMap()}),l.on(m,this,e=>{this.isVisible=!this.isVisible,this.isVisible?this.showMap(e.position):this.hideMap()})}step(e,i){if(this.isVisible&&this.heroMarker&&i.level){const r=i.level.children.find(o=>o instanceof d);r&&(this.heroMarker.position.x=r.position.x*this.mapScale-32*this.mapScale,this.heroMarker.position.y=r.position.y*this.mapScale-32*this.mapScale)}}showMap(e){let i=s.images.outdoorGround;switch(this.levelId){case"CaveLevel1":i=s.images.desertGround;break}this.mapShell=new a(e),this.mapSprite=new h({position:new t(0,0),resource:i,frameSize:new t(1600,800),scale:this.mapScale}),this.mapShell.addChild(this.mapSprite);const r=new t(e.x*this.mapScale,e.y*this.mapScale);this.heroMarker=new h({resource:s.images.mapMarker,position:r,scale:this.mapScale*5}),this.mapShell.addChild(this.heroMarker),this.addChild(this.mapShell)}hideMap(){this.mapSprite&&(this.removeChild(this.mapSprite),this.mapSprite=null),this.heroMarker&&(this.removeChild(this.heroMarker),this.heroMarker=null),this.mapShell&&(this.removeChild(this.mapShell),this.mapShell=null)}}
