"use strict";import{GameObject as d}from"../../GameObject.js";import{Vector2 as s}from"../../Vector2.js";import{LEFT as f,RIGHT as p,UP as l,DOWN as w}from"../../Input.js";import{Sprite as u}from"../../Sprite.js";import{resources as k}from"../../Resource.js";import{Animations as h}from"../../Animations.js";import{FrameIndexPattern as e}from"../../FrameIndexPattern.js";import{WALK_LEFT as D,WALK_DOWN as b,WALK_UP as y,WALK_RIGHT as W,STAND_LEFT as A,STAND_DOWN as T,STAND_UP as L,STAND_RIGHT as S,PICK_UP_DOWN as _,ATTACK_WALK_DOWN as K,ATTACK_WALK_LEFT as I,ATTACK_WALK_RIGHT as g,ATTACK_WALK_UP as U}from"../Hero/heroAnimations.js";import{SaveGame as N}from"../../SaveGame.js";export class Attack extends d{constructor(t,n="sword"){super(new s(0,0));this.lifetime=480;this.facingDirection=t,this.drawLayer="HUD",this.body=new u({resource:k.images[n],position:new s(-8,-8),frameSize:new s(32,32),hFrames:6,vFrames:4,frame:1,animations:new h({walkLeft:new e(D),walkDown:new e(b),walkUp:new e(y),walkRight:new e(W),standLeft:new e(A),standDown:new e(T),standUp:new e(L),standRight:new e(S),pickUpDown:new e(_),attackWalkDown:new e(K),attackWalkRight:new e(g),attackWalkUp:new e(U),attackWalkLeft:new e(I)})}),this.addChild(this.body);const a=Attack.attackSlices[Attack.sliceIndex];if(a&&N.loadSound()==="on"&&this.playSoundSlice(a[0],a[1]),Attack.sliceIndex=(Attack.sliceIndex+1)%Attack.attackSlices.length,this.body.animations){switch(this.facingDirection){case f:this.body.animations.play("attackWalkLeft");break;case p:this.body.animations.play("attackWalkRight");break;case l:this.body.animations.play("attackWalkUp");break;case w:this.body.animations.play("attackWalkDown");break}return}}static{this.attackSlices=[[.2,.6],[3,3.4],[5.6,6]]}static{this.sliceIndex=0}step(t){this.lifetime-=t,this.lifetime<=0&&this.destroy()}destroy(){super.destroy()}async playSoundSlice(t,n){const c=await(await fetch("./sounds/items/sword_attack01.mp3")).arrayBuffer(),i=new AudioContext,m=await i.decodeAudioData(c),o=i.createBufferSource();o.buffer=m;const r=i.createGain();r.gain.value=.2,o.connect(r),r.connect(i.destination),o.start(0,t,n-t)}}
