"use strict";import{GameObject as b}from"../../GameObject.js";import{resources as r}from"../../Resource.js";import{Sprite as u}from"../../Sprite.js";import{Vector2 as i}from"../../Vector2.js";import{events as d,HERO_PICKS_UP_ITEM as x,HERO_USE_ITEM as E}from"../../Events.js";import{SaveGame as c}from"../../SaveGame.js";import{getCharacterFrame as R,getCharacterWidth as S}from"../SpriteTextString/spriteFontMap.js";export const INVENTORY_ITEMS=["treeResource","stoneResource","bushResource"];export class Inventory extends b{constructor(){if(super(new i(1,1)),this.drawLayer="HUD",this.nextId=0,this.items=c.loadInventory().map(t=>({...t,image:r.images[t.name]})),this.items.length>0){const t=this.items.find(e=>INVENTORY_ITEMS.includes(e.name));t&&(t.amount+=1),this.nextId=Math.max(...this.items.map(e=>e.id))}this.renderInventory()}ready(){d.on(x,this,t=>{const{imageKey:e}=t,n=this.items.find(o=>o.name===e);n?INVENTORY_ITEMS.includes(n.name)&&(n.amount+=1):INVENTORY_ITEMS.includes(e)&&(this.nextId+=1,this.items.push({id:this.nextId,image:r.images[e],name:e,amount:1})),c.saveInventory(this.items.map(o=>({id:o.id,name:o.name,amount:o.amount}))),this.renderInventory()}),d.on(E,this,t=>{const{imageKey:e}=t;this.removeFromInventory(e)})}renderInventory(){this.children.forEach(e=>e.destroy()),this.items.filter(e=>e.amount>0).forEach((e,n)=>{const s=n*24,a=0,f=new u({resource:r.images.inventoryItemFrame,position:new i(s,a-.01),frameSize:new i(24,24)});this.addChild(f);const y=new u({resource:r.images[e.name],position:new i(s+4,a+4)});if(this.addChild(y),e.amount>1){const v=String(e.amount);let h=s+8;const p=a+12;for(const I of v){const l=S(I),g=new u({position:new i(h,p),resource:r.images.fontWhite,hFrames:13,vFrames:6,frame:R(I)});this.addChild(g),h+=l+1}}})}removeFromInventory(t){this.items=this.items.filter(e=>e.name!==t),this.renderInventory()}hasResource(t,e){const n=this.items.find(o=>o.name===t);return!!n&&n.amount>=e}removeResource(t,e){const n=this.items.find(o=>o.name===t);n&&(n.amount-=e,n.amount<=0&&(n.amount=0),this.items.sort((o,m)=>o.amount===0&&m.amount>0?1:o.amount>0&&m.amount===0?-1:0),c.saveInventory(this.items.map(o=>({id:o.id,name:o.name,amount:o.amount}))),this.renderInventory())}completeQuest(t){return t.every(n=>this.hasResource(n.imageKey,n.amount))?(t.forEach(n=>this.removeResource(n.imageKey,n.amount)),!0):!1}}
