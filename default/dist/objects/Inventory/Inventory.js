"use strict";import{GameObject as p}from"../../GameObject.js";import{resources as o}from"../../Resource.js";import{Sprite as n}from"../../Sprite.js";import{Vector2 as i}from"../../Vector2.js";import{events as c,HERO_PICKS_UP_ITEM as v,HERO_USE_ITEM as K}from"../../Events.js";import{SaveGame as y}from"../../SaveGame.js";import{getCharacterFrame as R,getCharacterWidth as x}from"../SpriteTextString/spriteFontMap.js";export class Inventory extends p{constructor(){if(super(new i(1,1)),this.drawLayer="HUD",this.nextId=0,this.items=y.loadInventory().map(e=>({...e,image:o.images[e.imageKey]})),this.items.length>0){const e=this.items.find(t=>t.imageKey==="treeRessource"||t.imageKey==="stoneRessource"||t.imageKey==="bushRessource");e&&(e.amount+=1),this.nextId=Math.max(...this.items.map(t=>t.id))}this.renderInventory()}ready(){c.on(v,this,e=>{const{imageKey:t}=e,s=this.items.find(r=>r.imageKey===t);s?(s.imageKey==="treeRessource"||s.imageKey==="stoneRessource"||s.imageKey==="bushRessource")&&(s.amount+=1):(this.nextId+=1,this.items.push({id:this.nextId,image:o.images[t],imageKey:t,amount:1})),y.saveInventory(this.items.map(r=>({id:r.id,imageKey:r.imageKey,amount:r.amount}))),this.renderInventory()}),c.on(K,this,e=>{const{imageKey:t}=e;this.removeFromInventory(t)})}renderInventory(){this.children.forEach(e=>e.destroy()),this.items.forEach((e,t)=>{const s=t*25,r=0,h=new n({resource:o.images.inventoryItemFrame,position:new i(s-.01,r-.01),frameSize:new i(24,24)});this.addChild(h);const u=new n({resource:o.images[e.imageKey],position:new i(s+4,r+4)});if(this.addChild(u),e.amount>1){const d=String(e.amount);let m=s+8;const g=r+12;for(const a of d){const I=x(a),f=new n({position:new i(m,g),resource:o.images.fontWhite,hFrames:13,vFrames:6,frame:R(a)});this.addChild(f),m+=I+1}}})}removeFromInventory(e){this.items=this.items.filter(t=>t.imageKey!==e),this.renderInventory()}}
