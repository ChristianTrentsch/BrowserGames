"use strict";import{GameObject as p}from"../../GameObject.js";import{resources as o}from"../../Resource.js";import{Sprite as s}from"../../Sprite.js";import{Vector2 as r}from"../../Vector2.js";import{events as c,HERO_PICKS_UP_ITEM as v,HERO_USE_ITEM as K}from"../../Events.js";import{SaveGame as h}from"../../SaveGame.js";import{getCharacterFrame as x,getCharacterWidth as l}from"../SpriteTextString/spriteFontMap.js";export const INVENTORY_ITEMS=["treeRessource","stoneRessource","bushRessource"];export class Inventory extends p{constructor(){if(super(new r(1,1)),this.drawLayer="HUD",this.nextId=0,this.items=h.loadInventory().map(e=>({...e,image:o.images[e.imageKey]})),this.items.length>0){const e=this.items.find(t=>INVENTORY_ITEMS.includes(t.imageKey));e&&(e.amount+=1),this.nextId=Math.max(...this.items.map(t=>t.id))}this.renderInventory()}ready(){c.on(v,this,e=>{const{imageKey:t}=e,n=this.items.find(i=>i.imageKey===t);n?INVENTORY_ITEMS.includes(n.imageKey)&&(n.amount+=1):INVENTORY_ITEMS.includes(t)&&(this.nextId+=1,this.items.push({id:this.nextId,image:o.images[t],imageKey:t,amount:1})),h.saveInventory(this.items.map(i=>({id:i.id,imageKey:i.imageKey,amount:i.amount}))),this.renderInventory()}),c.on(K,this,e=>{const{imageKey:t}=e;this.removeFromInventory(t)})}renderInventory(){this.children.forEach(e=>e.destroy()),this.items.forEach((e,t)=>{const n=t*25,i=0,y=new s({resource:o.images.inventoryItemFrame,position:new r(n-.01,i-.01),frameSize:new r(24,24)});this.addChild(y);const d=new s({resource:o.images[e.imageKey],position:new r(n+4,i+4)});if(this.addChild(d),e.amount>1){const I=String(e.amount);let m=n+8;const u=i+12;for(const a of I){const g=l(a),f=new s({position:new r(m,u),resource:o.images.fontWhite,hFrames:13,vFrames:6,frame:x(a)});this.addChild(f),m+=g+1}}})}removeFromInventory(e){this.items=this.items.filter(t=>t.imageKey!==e),this.renderInventory()}}
