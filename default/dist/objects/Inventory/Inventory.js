"use strict";import{GameObject as v}from"../../GameObject.js";import{resources as o}from"../../Resource.js";import{Sprite as s}from"../../Sprite.js";import{Vector2 as r}from"../../Vector2.js";import{events as c,HERO_PICKS_UP_ITEM as p,HERO_USE_ITEM as l}from"../../Events.js";import{SaveGame as m}from"../../SaveGame.js";import{getCharacterFrame as K,getCharacterWidth as b}from"../SpriteTextString/spriteFontMap.js";export const INVENTORY_ITEMS=["treeRessource","stoneRessource","bushRessource"];export class Inventory extends v{constructor(){if(super(new r(1,1)),this.drawLayer="HUD",this.nextId=0,this.items=m.loadInventory().map(e=>({...e,image:o.images[e.imageKey]})),this.items.length>0){const e=this.items.find(i=>INVENTORY_ITEMS.includes(i.imageKey));e&&(e.amount+=1),this.nextId=Math.max(...this.items.map(i=>i.id))}this.renderInventory()}ready(){c.on(p,this,e=>{const{imageKey:i}=e,t=this.items.find(n=>n.imageKey===i);t?INVENTORY_ITEMS.includes(t.imageKey)&&(t.amount+=1):INVENTORY_ITEMS.includes(i)&&(this.nextId+=1,this.items.push({id:this.nextId,image:o.images[i],imageKey:i,amount:1})),m.saveInventory(this.items.map(n=>({id:n.id,imageKey:n.imageKey,amount:n.amount}))),this.renderInventory()}),c.on(l,this,e=>{const{imageKey:i}=e;this.removeFromInventory(i)})}renderInventory(){this.children.forEach(e=>e.destroy()),this.items.forEach((e,i)=>{const t=i*25,n=0,y=new s({resource:o.images.inventoryItemFrame,position:new r(t-.01,n-.01),frameSize:new r(24,24)});this.addChild(y);const h=new s({resource:o.images[e.imageKey],position:new r(t+4,n+4)});if(this.addChild(h),e.amount>1){const I=String(e.amount);let a=t+8;const d=n+12;for(const u of I){const g=b(u),f=new s({position:new r(a,d),resource:o.images.fontWhite,hFrames:13,vFrames:6,frame:K(u)});this.addChild(f),a+=g+1}}})}removeFromInventory(e){this.items=this.items.filter(i=>i.imageKey!==e),this.renderInventory()}hasResource(e,i){const t=this.items.find(n=>n.imageKey===e);return!!t&&t.amount>=i}removeResource(e,i){const t=this.items.find(n=>n.imageKey===e);t&&(t.amount-=i,t.amount<=0&&(this.items=this.items.filter(n=>n.imageKey!==e)),m.saveInventory(this.items.map(n=>({id:n.id,imageKey:n.imageKey,amount:n.amount}))),this.renderInventory())}completeQuest(e){return e.every(t=>this.hasResource(t.imageKey,t.amount))?(e.forEach(t=>this.removeResource(t.imageKey,t.amount)),!0):!1}}
