"use strict";import{GameObject as p}from"../../GameObject.js";import{DEBUG_MODE as b}from"../../helpers/debug.js";import{gridCells as c}from"../../helpers/grid.js";import{resources as h}from"../../Resource.js";import{SaveGame as i}from"../../SaveGame.js";import{Sprite as g}from"../../Sprite.js";import{storyFlags as l}from"../../StoryFlags.js";import{Vector2 as m}from"../../Vector2.js";export class Level extends p{constructor(e,o,r=.5){super(e),o&&(this.backgroundSound=new Audio(o),this.backgroundSound.loop=!0,this.backgroundSound.volume=r),this.noResourceZones=[]}addChildrenGroup(e,o,r,u,a=[]){const s=Math.floor(o/c(1)),t=Math.floor(r/c(1));u.forEach(n=>{n.position.x+=o,n.position.y+=r,this.addChild(n)});const d=a.map(n=>({x1:n.x1+s,y1:n.y1+t,x2:n.x2+s,y2:n.y2+t}));this.noResourceZones||(this.noResourceZones=[]),this.noResourceZones.push(...d)}checkGameProgress(){i.isInEquipment("rodPurple")&&l.add("STORY_01_PART_01"),i.isInEquipment("rodRed")&&l.add("STORY_02_PART_01")}initBackgroundSound(){i.loadSound()==="on"?this.playBackgroundSound():this.stopBackgroundSound()}playBackgroundSoundFadeIn(e=1e3){if(this.backgroundSound){this.backgroundSound.volume=0,this.backgroundSound.play().catch(a=>console.warn(a));let o=.05,r=e/(1/o),u=setInterval(()=>{this.backgroundSound.volume<1?this.backgroundSound.volume=Math.min(1,this.backgroundSound.volume+o):clearInterval(u)},r)}}stopBackgroundSoundFadeOut(e=1e3){if(this.backgroundSound){let o=.05,r=e/(1/o),u=setInterval(()=>{this.backgroundSound.volume>0?this.backgroundSound.volume=Math.max(0,this.backgroundSound.volume-o):(clearInterval(u),this.backgroundSound.pause(),this.backgroundSound.currentTime=0)},r)}}playBackgroundSound(){this.backgroundSound&&this.backgroundSound.play().catch(e=>console.warn("Sound konnte nicht abgespielt werden:",e))}stopBackgroundSound(){this.backgroundSound&&this.backgroundSound.pause()}generateWall(e,o,r,u,a=b){const s=[];switch(u){case"top":case"bottom":for(let t=e.x;t<=o.x;t+=r)s.push(`${t},${e.y}`);break;case"left":case"right":for(let t=e.y;t<=o.y;t+=r)s.push(`${e.x},${t}`);break}return a&&s.forEach(t=>{const[d,n]=t.split(",").map(Number);this.visualizeTile(new m(d,n))}),s}visualizeTile(e){const o=new g({resource:h.images.collectible,position:e,frameSize:new m(16,16),hFrames:20,frame:19});this.addChild(o)}}
