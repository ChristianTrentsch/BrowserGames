"use strict";import{GameObject as p}from"../../GameObject.js";import{Camera as d}from"../../Camera.js";import{Input as v}from"../../Input.js";import{Inventory as f}from"../Inventory/Inventory.js";import{events as t,CHANGE_LEVEL as h,HERO_REQUESTS_ACTION as c,TEXTBOX_START as R,TEXTBOX_END as g,HERO_ATTACK_ACTION as y}from"../../Events.js";import{SpriteTextString as x}from"../SpriteTextString/SpriteTextString.js";import{Vector2 as T}from"../../Vector2.js";import{SaveGame as n}from"../../SaveGame.js";import{Equipment as C}from"../Equipment/Equipment.js";import{storyFlags as l}from"../../StoryFlags.js";import{Npc as S}from"../Npc/Npc.js";import{gridCells as m}from"../../helpers/grid.js";export class Main extends p{constructor(e){super(e),this.level=null,this.input=new v,this.camera=new d(new T(0,0)),this.savedResources=[]}ready(){const e=new f;this.addChild(e);const s=new C;this.addChild(s),t.on(h,this,o=>{n.saveLevel(o.levelId),this.setLevel(o)}),t.on(c,this,o=>{if(typeof o.getContent!="function")return;if(o instanceof S){const i=o.getContent()?.storyFlag??null;switch(i){case"STORY_01_PART_01":e.completeQuest([{imageKey:"treeResource",amount:5}])&&(l.add(i),o.position.x+=m(-1));break;case"STORY_02_PART_01":e.completeQuest([{imageKey:"treeResource",amount:25},{imageKey:"bushResource",amount:20},{imageKey:"stoneResource",amount:10}])&&(l.add(i),o.position.x+=m(-1));break;default:break}}const r=o.getContent();if(!r)return;const a=new x(r.portraitFrame,r.string);this.addChild(a),t.emit(R);const u=t.on(g,this,()=>{a.destroy(),t.off(u)})}),t.on(y,this,o=>{o.healthPoints-=s.getActiveDamage(),o.healthPoints<=0&&(o.healthPoints=0),this.level&&(this.pushResource(o),n.saveResources(this.level.levelId,this.savedResources))})}pushResource(e){const s=this.savedResources.find(o=>o.type===e.constructor.name&&o.x===e.position.x&&o.y===e.position.y);s?s.hp=e.healthPoints:this.savedResources.push({type:e.constructor.name,x:e.position.x,y:e.position.y,hp:e.healthPoints})}setLevel(e){this.level&&this.level.destroy(),this.level=e,this.addChild(this.level),this.savedResources=n.loadResources(this.level.levelId)??[]}drawBackground(e){this.level&&this.level.background.drawImage(e,this.level.background.position.x,this.level.background.position.x)}drawObjects(e){this.children.forEach(s=>{s.drawLayer!=="HUD"&&s.draw(e,s.position.x,s.position.x)})}drawForeground(e){this.children.forEach(s=>{s.drawLayer==="HUD"&&s.draw(e,s.position.x,s.position.x)})}}
