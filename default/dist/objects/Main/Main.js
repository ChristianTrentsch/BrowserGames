"use strict";import{GameObject as d}from"../../GameObject.js";import{Camera as f}from"../../Camera.js";import{Input as c}from"../../Input.js";import{Inventory as v}from"../Inventory/Inventory.js";import{events as n,CHANGE_LEVEL as h,HERO_REQUESTS_ACTION as R,TEXTBOX_START as g,TEXTBOX_END as y,HERO_ATTACK_ACTION as x}from"../../Events.js";import{SpriteTextString as C}from"../SpriteTextString/SpriteTextString.js";import{Vector2 as T}from"../../Vector2.js";import{SaveGame as l}from"../../SaveGame.js";import{Tree as E}from"../../levels/parts/Tree/Tree.js";import{Bush as S}from"../../levels/parts/Bush/Bush.js";import{Stone as _}from"../../levels/parts/Stone/Stone.js";import{Equipment as m}from"../Equipment/Equipment.js";import{storyFlags as u}from"../../StoryFlags.js";import{Npc as L}from"../Npc/Npc.js";import{gridCells as p}from"../../helpers/grid.js";export class Main extends d{constructor(e){super(e),this.level=null,this.input=new c,this.camera=new f(new T(0,0)),this.savedResources=[]}ready(){const e=new v;this.addChild(e);const s=new m;this.addChild(s),n.on(h,this,o=>{l.saveLevel(o.levelId),this.setLevel(o)}),n.on(R,this,o=>{if(typeof o.getContent!="function")return;if(o instanceof L){const a=o.getContent()?.storyFlag??null;switch(a){case"STORY_01_PART_01":e.completeQuest([{imageKey:"treeResource",amount:5}])&&(u.add(a),o.position.x+=p(-1));break;case"STORY_02_PART_01":e.completeQuest([{imageKey:"treeResource",amount:25},{imageKey:"bushResource",amount:20},{imageKey:"stoneResource",amount:10}])&&(u.add(a),o.position.x+=p(-1));break;default:break}}const t=o.getContent();if(!t)return;const r=new C(t.portraitFrame,t.string);this.addChild(r),n.emit(g);const i=n.on(y,this,()=>{r.destroy(),n.off(i)})}),n.on(x,this,o=>{if(o instanceof E||o instanceof _||o instanceof S){const t=this.children.find(i=>i instanceof m),r=t?t.getActiveDamage():1;o.healthPoints-=r,o.healthPoints<=0&&(o.healthPoints=0),this.level&&(this.pushResource(o),l.saveResources(this.level.levelId,this.savedResources))}})}pushResource(e){const s=this.savedResources.find(o=>o.type===e.constructor.name&&o.x===e.position.x&&o.y===e.position.y);s?s.hp=e.healthPoints:this.savedResources.push({type:e.constructor.name,x:e.position.x,y:e.position.y,hp:e.healthPoints})}setLevel(e){this.level&&this.level.destroy(),this.level=e,this.addChild(this.level),this.savedResources=l.loadResources(this.level.levelId)??[]}drawBackground(e){this.level&&this.level.background.drawImage(e,this.level.background.position.x,this.level.background.position.x)}drawObjects(e){this.children.forEach(s=>{s.drawLayer!=="HUD"&&s.draw(e,s.position.x,s.position.x)})}drawForeground(e){this.children.forEach(s=>{s.drawLayer==="HUD"&&s.draw(e,s.position.x,s.position.x)})}}
