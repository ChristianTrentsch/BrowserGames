"use strict";import{GameObject as d}from"../../GameObject.js";import{Camera as u}from"../../Camera.js";import{Input as v}from"../../Input.js";import{Inventory as f}from"../Inventory/Inventory.js";import{events as s,CHANGE_LEVEL as h,HERO_REQUESTS_ACTION as c,TEXTBOX_START as R,TEXTBOX_END as g,HERO_ATTACK_ACTION as x}from"../../Events.js";import{SpriteTextString as C}from"../SpriteTextString/SpriteTextString.js";import{Vector2 as T}from"../../Vector2.js";import{SaveGame as i}from"../../SaveGame.js";import{Equipment as y}from"../Equipment/Equipment.js";import{storyFlags as l}from"../../StoryFlags.js";import{Npc as S}from"../Npc/Npc.js";import{gridCells as m}from"../../helpers/grid.js";export class Main extends d{constructor(e){super(e),this.level=null,this.input=new v,this.camera=new u(new T(0,0)),this.savedResources=[]}ready(){const e=new f;this.addChild(e);const t=new y;this.addChild(t),s.on(h,this,o=>{i.saveLevel(o.levelId),this.setLevel(o)}),s.on(c,this,o=>{if(typeof o.getContent!="function")return;if(o instanceof S){const n=o.getContent()?.storyFlag??null;switch(n){case"STORY_01_PART_01":e.completeQuest([{name:"tree",amount:5}])&&(l.add(n),o.position.x+=m(-1));break;case"STORY_02_PART_01":e.completeQuest([{name:"tree",amount:25},{name:"bush",amount:20},{name:"stone",amount:10}])&&(l.add(n),o.position.x+=m(-1));break;default:break}}const r=o.getContent();if(!r)return;const a=new C(r.portraitFrame,r.string);this.addChild(a),s.emit(R);const p=s.on(g,this,()=>{a.destroy(),s.off(p)})}),s.on(x,this,o=>{o.healthPoints-=t.getActiveDamage(),o.healthPoints<=0&&(o.healthPoints=0),this.level&&(this.pushResource(o),i.saveResources(this.level.levelId,this.savedResources))})}pushResource(e){const t=this.savedResources.find(o=>o.type===e.type&&o.x===e.position.x&&o.y===e.position.y);t?t.hp=e.healthPoints:this.savedResources.push({type:e.type,x:e.position.x,y:e.position.y,hp:e.healthPoints})}setLevel(e){this.level&&this.level.destroy(),this.level=e,this.addChild(this.level),this.savedResources=i.loadResources(this.level.levelId)??[]}drawBackground(e){this.level&&this.level.background.drawImage(e,this.level.background.position.x,this.level.background.position.x)}drawObjects(e){this.children.forEach(t=>{t.drawLayer!=="HUD"&&t.draw(e,t.position.x,t.position.x)})}drawForeground(e){this.children.forEach(t=>{t.drawLayer==="HUD"&&t.draw(e,t.position.x,t.position.x)})}}
