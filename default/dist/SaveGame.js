"use strict";import{Vector2 as a}from"./Vector2.js";export class SaveGame{static{this.inventoryKey="inventory"}static{this.heroKey="heroPosition"}static{this.levelKey="currentLevel"}static saveInventory(e){localStorage.setItem(this.inventoryKey,JSON.stringify(e))}static loadInventory(){const e=localStorage.getItem(this.inventoryKey);if(!e)return[];try{return JSON.parse(e)}catch{return[]}}static clearInventory(){localStorage.removeItem(this.inventoryKey)}static isInInventory(e){const t=localStorage.getItem(this.inventoryKey);if(!t)return!1;try{return JSON.parse(t).some(o=>o.imageKey===e)}catch(r){return console.error("Fehler beim Lesen des Inventars:",r),!1}}static saveHero(e,t){const r={levelId:e,x:t.x,y:t.y};localStorage.setItem(this.heroKey,JSON.stringify(r))}static loadHero(e,t){const r=localStorage.getItem(this.heroKey);if(!r)return t;try{const o=JSON.parse(r);if(o.levelId===e)return new a(o.x,o.y)}catch(o){console.warn("Fehler beim Laden der Hero Position:",o)}return t}static clearHero(){localStorage.removeItem(this.heroKey)}static saveLevel(e){localStorage.setItem(this.levelKey,e)}static loadLevel(){return localStorage.getItem(this.levelKey)}static clearLevel(){localStorage.removeItem(this.levelKey)}static clearAll(){this.clearInventory(),this.clearHero(),this.clearLevel()}}
