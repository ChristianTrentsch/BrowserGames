"use strict";import{Main as L}from"./objects/Main/Main.js";import{Vector2 as a}from"./Vector2.js";import{OutdoorLevel1 as f}from"./levels/OutdoorLevel1.js";import{GameLoop as u}from"./GameLoop.js";import{gridCells as m}from"./helpers/grid.js";import{SaveGame as r}from"./SaveGame.js";import{levelRegistry as v}from"./helpers/levelRegistry.js";document.addEventListener("DOMContentLoaded",()=>{const s=document.getElementById("closeOverlay"),o=document.getElementById("overlay"),d=document.getElementById("reset");s&&o&&(s.addEventListener("click",()=>{o.style.visibility="hidden"}),r.loadOverlay()==="true"?o.style.display="none":o.style.display="flex",s.addEventListener("click",()=>{o.style.display="none",r.saveOverlay("true")})),d&&d.addEventListener("click",()=>{r.clearAll(),window.location.reload()});const n=document.querySelector("#game-canvas");if(n){const e=n.getContext("2d");if(e){console.log("ctx LOADED",e);const t=new L(new a(0,0)),y=c=>{t.stepEntry(c,t),t.input.update()},p=()=>{e.clearRect(0,0,n.width,n.height),t.drawBackground(e),e.save(),t.camera&&e.translate(t.camera.position.x,t.camera.position.y),t.drawObjects(e),e.restore(),t.drawForeground(e)},l=r.loadLevel();let i;if(l&&v[l]){const c=v[l];i=new c({position:new a(0,0)})}else i=new f({position:new a(0,0),heroPosition:new a(m(8),m(4))});t.setLevel(i),new u(y,p).start(),console.log("START GAME")}}});
