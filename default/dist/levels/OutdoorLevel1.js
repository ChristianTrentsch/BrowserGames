"use strict";import{gridCells as e,TILE_SIZE as r}from"../helpers/grid.js";import{resources as h}from"../Resource.js";import{Vector2 as t}from"../Vector2.js";import{Sprite as l}from"../Sprite.js";import{Level as x}from"../objects/Level/Level.js";import{Exit as I}from"../objects/Exit/Exit.js";import{Hero as L}from"../objects/Hero/Hero.js";import{Item as P}from"../objects/Item/Item.js";import{events as m,HERO_EXITS as b,CHANGE_LEVEL as k}from"../Events.js";import{CaveLevel1 as E}from"./CaveLevel1.js";import{SaveGame as n}from"../SaveGame.js";import{Tree as H}from"./parts/Tree/Tree.js";import{Stone as R}from"./parts/Stone/Stone.js";import{Square as i}from"./parts/Square/Square.js";import{Water as d}from"./parts/Water/Water.js";import{Bush as p}from"./parts/Bush/Bush.js";import{House as O}from"./parts/House/House.js";import{generateDefaultResources as B}from"../helpers/generateResources.js";export class OutdoorLevel1 extends x{constructor({position:u,heroPosition:w}){super(u,"./sounds/levels/OutdoorLevel1.mp3",.4);this.defaultHeroPosition=new t(e(8),e(4));this.levelId="OutdoorLevel1";this.initBackgroundSound(),this.background=new l({resource:h.images.outdoorSky,frameSize:new t(320,180),position:new t(0,0)});const c=new l({resource:h.images.outdoorGround,frameSize:new t(1600,900),position:new t(0,0)});this.addChild(c);const f=new I(e(10),e(3));this.addChild(f),this.addChild(new O(224,64)),this.addChild(new d(e(4),e(5))),this.addChild(new d(e(5),e(5))),this.addChild(new d(e(6),e(5))),this.addChild(new i(e(4),e(4))),this.addChild(new i(e(6),e(4))),this.addChild(new p(e(5),e(3))),this.addChild(new i(e(8),e(3))),this.addChild(new i(e(9),e(3)));const S=B({levelId:"OutdoorLevel1",width:1600,height:900,seed:3,pathZones:[{x1:0,x2:100,y1:20,y2:24},{x1:45,x2:55,y1:0,y2:56},{x1:0,x2:14,y1:0,y2:7}],density:{Tree:.2,Bush:.1,Stone:.02},border:48}),v=n.loadResources(this.levelId),y=S.map(o=>{const a=v.find(s=>s.x===o.x&&s.y===o.y&&s.type===o.type);return a?{...o,...a}:o});for(const o of y)if(o.hp>0)switch(o.type){case"Tree":this.addChild(new H(o.x,o.y,o.hp));break;case"Bush":this.addChild(new p(o.x,o.y,o.hp));break;case"Stone":this.addChild(new R(o.x,o.y,o.hp));break}this.heroStartPosition=n.loadHero(this.levelId,w??this.defaultHeroPosition);const C=new L(this.heroStartPosition.x,this.heroStartPosition.y);if(this.addChild(C),!n.isInInventory("rodPurple")){const o=new P(e(5),e(4),"rodPurple");this.addChild(o)}const g={right:this.generateWall(new t(1568,32),new t(1568,832),r,"right"),left:this.generateWall(new t(16,32),new t(16,832),r,"left"),top:this.generateWall(new t(32,16),new t(1568,16),r,"top"),bottom:this.generateWall(new t(32,848),new t(1568,848),r,"bottom")};this.walls=new Set(Object.values(g).flat())}ready(){m.on(b,this,()=>{this.stopBackgroundSound(),m.emit(k,new E({position:new t(e(0),e(0)),heroPosition:new t(e(5),e(2))}))})}}
