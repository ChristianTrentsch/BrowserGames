"use strict";import{gridCells as e,TILE_SIZE as i}from"../helpers/grid.js";import{resources as d}from"../Resource.js";import{Vector2 as o}from"../Vector2.js";import{Sprite as p}from"../Sprite.js";import{Level as C}from"../objects/Level/Level.js";import{Exit as g}from"../objects/Exit/Exit.js";import{Hero as T}from"../objects/Hero/Hero.js";import{Item as I}from"../objects/Item/Item.js";import{events as a,HERO_EXITS as P,CHANGE_LEVEL as L}from"../Events.js";import{CaveLevel1 as B}from"./CaveLevel1.js";import{SaveGame as n}from"../SaveGame.js";import{Tree as b}from"./parts/Tree/Tree.js";import{Stone as k}from"./parts/Stone/Stone.js";import{Square as r}from"./parts/Square/Square.js";import{Water as l}from"./parts/Water/Water.js";import{Bush as E}from"./parts/Bush/Bush.js";import{House as H}from"./parts/House/House.js";export class OutdoorLevel1 extends C{constructor({position:m,heroPosition:y}){super(m,"./sounds/levels/OutdoorLevel1.mp3",.4);this.defaultHeroPosition=new o(e(8),e(4));this.levelId="OutdoorLevel1";this.initBackgroundSound(),this.background=new p({resource:d.images.outdoorSky,frameSize:new o(320,180),position:new o(0,0)});const u=new p({resource:d.images.outdoorGround,frameSize:new o(1600,900),position:new o(0,0)});this.addChild(u);const w=new g(e(10),e(3));this.addChild(w),this.addChild(new H(224,64)),this.addChild(new l(e(12),e(7))),this.addChild(new l(e(13),e(7))),this.addChild(new r(64,64)),this.addChild(new r(64,80)),this.addChild(new r(80,80)),this.addChild(new r(96,64)),this.addChild(new r(96,80)),this.addChild(new r(128,48)),this.addChild(new r(144,48));const c=[{type:"Bush",x:e(5),y:e(3),hp:2},{type:"Bush",x:e(4),y:e(8),hp:2},{type:"Bush",x:e(5),y:e(8),hp:2},{type:"Bush",x:e(7),y:e(8),hp:2},{type:"Bush",x:e(5),y:e(10),hp:2},{type:"Tree",x:e(8),y:e(8),hp:4},{type:"Tree",x:e(8),y:e(9),hp:4},{type:"Tree",x:e(4),y:e(9),hp:4},{type:"Tree",x:e(5),y:e(9),hp:4},{type:"Tree",x:e(4),y:e(10),hp:4},{type:"Tree",x:e(6),y:e(10),hp:4},{type:"Tree",x:e(4),y:e(3),hp:4},{type:"Tree",x:e(15),y:e(3),hp:4},{type:"Tree",x:e(14),y:e(3),hp:4},{type:"Tree",x:e(14),y:e(2),hp:4},{type:"Stone",x:e(12),y:e(6),hp:4},{type:"Stone",x:e(13),y:e(6),hp:4},{type:"Stone",x:e(14),y:e(6),hp:4}],x=n.loadResources(this.levelId),f=c.map(t=>{const h=x.find(s=>s.x===t.x&&s.y===t.y&&s.type===t.type);return h?{...t,...h}:t});for(const t of f)switch(t.type){case"Tree":this.addChild(new b(t.x,t.y,t.hp));break;case"Bush":this.addChild(new E(t.x,t.y,t.hp));break;case"Stone":this.addChild(new k(t.x,t.y,t.hp));break}this.heroStartPosition=n.loadHero(this.levelId,y??this.defaultHeroPosition);const S=new T(this.heroStartPosition.x,this.heroStartPosition.y);if(this.addChild(S),!n.isInInventory("rodPurple")){const t=new I(e(5),e(4),"rodPurple");this.addChild(t)}const v={right:this.generateWall(new o(1568,32),new o(1568,832),i,"right"),left:this.generateWall(new o(16,32),new o(16,832),i,"left"),top:this.generateWall(new o(32,16),new o(1568,16),i,"top"),bottom:this.generateWall(new o(32,848),new o(1568,848),i,"bottom")};this.walls=new Set(Object.values(v).flat())}ready(){a.on(P,this,()=>{this.stopBackgroundSound(),a.emit(L,new B({position:new o(e(0),e(0)),heroPosition:new o(e(5),e(2))}))})}}
