"use strict";import{GameObject as m}from"../../../GameObject.js";import{Sprite as i}from"../../../Sprite.js";import{Vector2 as e}from"../../../Vector2.js";import{resources as s}from"../../../Resource.js";import{getNextText as h}from"../../../helpers/levelPartsText.js";import{Item as a}from"../../../objects/Item/Item.js";import{INVENTORY_TREE as p}from"../../../objects/Inventory/Inventory.js";export class Tree extends m{constructor(t,r,o=4){super(new e(t,r));this.type="tree";this.isSolid=!0,this.healthPoints=o;const n=new i({resource:s.images.shadow,frameSize:new e(32,32),position:new e(-8,-16)});this.addChild(n),this.treeSprite=new i({resource:s.images.outdoorTree,frameSize:new e(16,32),position:new e(0,-15),hFrames:4,vFrames:1,frame:0}),this.addChild(this.treeSprite)}ready(){}step(t){const r=4-this.healthPoints;r>=1&&r<=3&&(this.removeChild(this.treeSprite),this.treeSprite=new i({resource:s.images.outdoorTree,frameSize:new e(16,32),position:new e(0,-15),hFrames:4,vFrames:1,frame:r}),this.addChild(this.treeSprite)),this.healthPoints<=0&&this.destroy(!0)}destroy(t=!1){t&&this.spawnItem(),super.destroy()}spawnItem(){const t=new a(this.position.x,this.position.y,p,"./sounds/items/pick_up_item.mp3",1);this.parent&&this.parent.addChild(t)}getContent(){return{portraitFrame:0,string:h("Tree")}}}
