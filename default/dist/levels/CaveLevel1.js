"use strict";import{gridCells as e}from"../helpers/grid.js";import{resources as t}from"../Resource.js";import{Vector2 as o}from"../Vector2.js";import{Sprite as i}from"../Sprite.js";import{Level as f}from"../objects/Level/Level.js";import{Exit as v}from"../objects/Exit/Exit.js";import{Hero as S}from"../objects/Hero/Hero.js";import{events as r,HERO_EXITS as C,CHANGE_LEVEL as g}from"../Events.js";import{OutdoorLevel1 as L}from"./OutdoorLevel1.js";import{Npc as s}from"../objects/Npc/Npc.js";import{Rod as P}from"../objects/Rod/Rod.js";import{SaveGame as n}from"../SaveGame.js";export class CaveLevel1 extends f{constructor({position:d,heroPosition:a}){super(d);this.levelId="CaveLevel1";this.defaultHeroPosition=new o(e(6),e(1));console.log("CaveLevel1 LOADED",this),this.background=new i({resource:t.images.cave,frameSize:new o(320,180),position:new o(0,0)});const h=new i({resource:t.images.caveGround,frameSize:new o(320,180),position:new o(0,0)});this.addChild(h);const l=new v(e(5),e(1));this.addChild(l),this.heroStartPosition=n.loadHero(this.levelId,a??this.defaultHeroPosition);const m=new S(this.heroStartPosition.x,this.heroStartPosition.y);if(this.addChild(m),!n.isInInventory("rodRed")){const u=new P(e(10),e(6),"rodRed");this.addChild(u)}const c=new s(e(5),e(5),"Ich bin der Uwe und ich bin auch dabei!");this.addChild(c);const p=new s(e(10),e(4),"Ich will hier raauuuusss!");this.addChild(p);const w={right:[],left:[],top:[],bottom:[],tree:[],stone:[],squares:[],water:[],house:[]};this.walls=new Set(Object.values(w).flat())}ready(){r.on(C,this,()=>{r.emit(g,new L({position:new o(e(0),e(0)),heroPosition:new o(e(11),e(3))}))})}}
