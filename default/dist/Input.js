"use strict";export const LEFT="LEFT",RIGHT="RIGHT",UP="UP",DOWN="DOWN",SPACE="SPACE",ITEM1="ITEM1",ITEM2="ITEM2",RELOAD="RELOAD",ATTACK="ATTACK";export class Input{constructor(){this.heldDirections=[],this.keys={ArrowLeft:!1,ArrowRight:!1,ArrowUp:!1,ArrowDown:!1,KeyW:!1,KeyA:!1,KeyS:!1,KeyD:!1,Space:!1,KeyE:!1,KeyR:!1,KeyQ:!1,KeyF:!1},this.lastKeys={...this.keys};const t={ArrowLeft:LEFT,ArrowRight:RIGHT,ArrowUp:UP,ArrowDown:DOWN,KeyA:LEFT,KeyD:RIGHT,KeyW:UP,KeyS:DOWN,Space:SPACE,KeyE:ITEM1,KeyQ:ITEM2,KeyR:RELOAD,KeyF:ATTACK};document.addEventListener("keydown",e=>{const s=e.code;[" ","ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].includes(e.key)&&e.preventDefault(),s in this.keys&&(this.keys[s]=!0,this.onArrowPressed(t[s]))}),document.addEventListener("keyup",e=>{const s=e.code;s in this.keys&&(this.keys[s]=!1,this.onArrowReleased(t[s]))}),window.addEventListener("gamepadconnected",e=>{console.log("Gamepad verbunden:",e.gamepad)}),window.addEventListener("gamepaddisconnected",e=>{console.log("Gamepad getrennt:",e.gamepad)})}get direction(){return this.heldDirections[0]}update(){this.lastKeys={...this.keys},this.pollGamepad()}getActionJustPressed(t){let e=!1;return this.keys[t]&&!this.lastKeys[t]&&(e=!0),e}onArrowPressed(t){this.heldDirections.indexOf(t)===-1&&this.heldDirections.unshift(t)}onArrowReleased(t){const e=this.heldDirections.indexOf(t);e!==-1&&this.heldDirections.splice(e,1)}pollGamepad(){const t=navigator.getGamepads();if(!t)return;const e=t[0];if(!e)return;const s=.4;this.resetDirectionsFromGamepad();const[o,r]=e.axes;o&&(o<-s&&this.onArrowPressed("LEFT"),o>s&&this.onArrowPressed("RIGHT")),r&&(r<-s&&this.onArrowPressed("UP"),r>s&&this.onArrowPressed("DOWN")),e.buttons[14]?.pressed&&this.onArrowPressed("LEFT"),e.buttons[15]?.pressed&&this.onArrowPressed("RIGHT"),e.buttons[12]?.pressed&&this.onArrowPressed("UP"),e.buttons[13]?.pressed&&this.onArrowPressed("DOWN"),this.mapButton(e.buttons[0],"Space"),this.mapButton(e.buttons[1],"KeyF"),this.mapButton(e.buttons[2],"KeyQ"),this.mapButton(e.buttons[3],"KeyE"),this.mapButton(e.buttons[9],"KeyR")}mapButton(t,e){t&&(t.pressed?this.keys[e]||(this.keys[e]=!0):this.keys[e]=!1)}resetDirectionsFromGamepad(){["LEFT","RIGHT","UP","DOWN"].forEach(t=>this.onArrowReleased(t))}}
